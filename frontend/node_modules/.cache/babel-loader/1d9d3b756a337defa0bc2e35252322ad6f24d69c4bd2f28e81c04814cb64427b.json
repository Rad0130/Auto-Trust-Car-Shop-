{"ast":null,"code":"var _jsxFileName = \"/home/shafiur/Auto-Trust/frontend/src/components/Cars/EditCar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport \"../../styles/CarForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EditCar = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [car, setCar] = useState({\n    title: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    price: \"\",\n    paymentType: \"cash\",\n    description: \"\"\n  });\n  const [image, setImage] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchCar = async () => {\n      try {\n        const res = await API.get(`/cars/${id}`);\n        setCar({\n          title: res.data.title,\n          brand: res.data.brand,\n          model: res.data.model,\n          year: res.data.year,\n          price: res.data.price,\n          paymentType: res.data.paymentType,\n          description: res.data.description || \"\"\n        });\n      } catch (err) {\n        var _err$response, _err$response$data;\n        setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to load car details\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCar();\n  }, [id]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      for (const key in car) {\n        formData.append(key, car[key]);\n      }\n      if (image) {\n        formData.append(\"image\", image);\n      }\n      await API.put(`/cars/${id}`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      navigate(\"/user-dashboard\");\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || \"Failed to update car\");\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"car-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Edit Car Listing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"car-form\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"Update Listing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(EditCar, \"dPvtXHGKr0e7vKYlJl46h3WSxaA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = EditCar;\nexport default EditCar;\nvar _c;\n$RefreshReg$(_c, \"EditCar\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","API","jsxDEV","_jsxDEV","EditCar","_s","id","navigate","car","setCar","title","brand","model","year","price","paymentType","description","image","setImage","error","setError","loading","setLoading","fetchCar","res","get","data","err","_err$response","_err$response$data","response","message","handleSubmit","e","preventDefault","formData","FormData","key","append","put","headers","_err$response2","_err$response2$data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","type","_c","$RefreshReg$"],"sources":["/home/shafiur/Auto-Trust/frontend/src/components/Cars/EditCar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport \"../../styles/CarForm.css\";\n\nconst EditCar = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [car, setCar] = useState({\n    title: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    price: \"\",\n    paymentType: \"cash\",\n    description: \"\"\n  });\n  const [image, setImage] = useState(null);\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const fetchCar = async () => {\n      try {\n        const res = await API.get(`/cars/${id}`);\n        setCar({\n          title: res.data.title,\n          brand: res.data.brand,\n          model: res.data.model,\n          year: res.data.year,\n          price: res.data.price,\n          paymentType: res.data.paymentType,\n          description: res.data.description || \"\"\n        });\n      } catch (err) {\n        setError(err.response?.data?.message || \"Failed to load car details\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchCar();\n  }, [id]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const formData = new FormData();\n      for (const key in car) {\n        formData.append(key, car[key]);\n      }\n      if (image) {\n        formData.append(\"image\", image);\n      }\n\n      await API.put(`/cars/${id}`, formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      navigate(\"/user-dashboard\");\n    } catch (err) {\n      setError(err.response?.data?.message || \"Failed to update car\");\n    }\n  };\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div className=\"error\">{error}</div>;\n\n  return (\n    <div className=\"car-form-container\">\n      <h2>Edit Car Listing</h2>\n      <form onSubmit={handleSubmit} className=\"car-form\">\n        {/* Form fields same as CarUploadForm */}\n        <button type=\"submit\" className=\"submit-btn\">Update Listing</button>\n      </form>\n    </div>\n  );\n};\n\nexport default EditCar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}