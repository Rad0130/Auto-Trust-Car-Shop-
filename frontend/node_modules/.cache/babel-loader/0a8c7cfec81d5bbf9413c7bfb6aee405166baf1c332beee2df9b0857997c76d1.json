{"ast":null,"code":"var _jsxFileName = \"/home/shafiur/Auto-Trust/frontend/src/components/User/UserDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport \"../../styles/Dashboard.css\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst passwordSchema = yup.object().shape({\n  currentPassword: yup.string().required(\"Current password is required\"),\n  newPassword: yup.string().min(6, \"Password must be at least 6 characters\").required(\"New password is required\"),\n  confirmPassword: yup.string().oneOf([yup.ref(\"newPassword\"), null], \"Passwords must match\").required(\"Confirm password is required\")\n});\nconst UserDashboard = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const [userCars, setUserCars] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [activeTab, setActiveTab] = useState(\"profile\");\n  const navigate = useNavigate();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    reset\n  } = useForm({\n    resolver: yupResolver(passwordSchema)\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const carsRes = await API.get(\"/user/my-cars\");\n        setUserCars(carsRes.data);\n      } catch (err) {\n        console.error(\"Failed to load data:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleProfileUpdate = async data => {\n    try {\n      await API.put(\"/user\", data);\n      setSuccessMessage(\"Profile updated successfully\");\n      reset({\n        currentPassword: \"\",\n        newPassword: \"\",\n        confirmPassword: \"\"\n      });\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Update error:\", err);\n      alert(\"Update failed: \" + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n    }\n  };\n  const handleDeleteCar = async carId => {\n    if (window.confirm(\"Are you sure you want to delete this car listing?\")) {\n      try {\n        await API.delete(`/cars/${carId}`);\n        setUserCars(userCars.filter(car => car._id !== carId));\n        setSuccessMessage(\"Car listing deleted successfully\");\n      } catch (err) {\n        var _err$response2, _err$response2$data;\n        alert(\"Failed to delete car: \" + (((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || err.message));\n      }\n    }\n  };\n  const handleApproveCar = async carId => {\n    try {\n      await API.patch(`/cars/${carId}/approve`);\n      setUserCars(userCars.map(car => car._id === carId ? {\n        ...car,\n        isApproved: true\n      } : car));\n      setSuccessMessage(\"Car approved successfully\");\n    } catch (err) {\n      var _err$response3, _err$response3$data;\n      alert(\"Approval failed: \" + (((_err$response3 = err.response) === null || _err$response3 === void 0 ? void 0 : (_err$response3$data = _err$response3.data) === null || _err$response3$data === void 0 ? void 0 : _err$response3$data.message) || err.message));\n    }\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-loading\",\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(UserDashboard, \"wL+mDOSuuE0RTvVKjwlUnLdCq0c=\", false, function () {\n  return [useNavigate, useForm];\n});\n_c = UserDashboard;\nexport default UserDashboard;\nvar _c;\n$RefreshReg$(_c, \"UserDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","API","AuthContext","useForm","yupResolver","yup","jsxDEV","_jsxDEV","passwordSchema","object","shape","currentPassword","string","required","newPassword","min","confirmPassword","oneOf","ref","UserDashboard","_s","user","userCars","setUserCars","loading","setLoading","successMessage","setSuccessMessage","activeTab","setActiveTab","navigate","register","handleSubmit","formState","errors","reset","resolver","fetchData","carsRes","get","data","err","console","error","handleProfileUpdate","put","_err$response","_err$response$data","alert","response","message","handleDeleteCar","carId","window","confirm","delete","filter","car","_id","_err$response2","_err$response2$data","handleApproveCar","patch","map","isApproved","_err$response3","_err$response3$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/shafiur/Auto-Trust/frontend/src/components/User/UserDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport \"../../styles/Dashboard.css\";\nimport { useForm } from \"react-hook-form\";\nimport { yupResolver } from \"@hookform/resolvers/yup\";\nimport * as yup from \"yup\";\n\nconst passwordSchema = yup.object().shape({\n  currentPassword: yup.string().required(\"Current password is required\"),\n  newPassword: yup\n    .string()\n    .min(6, \"Password must be at least 6 characters\")\n    .required(\"New password is required\"),\n  confirmPassword: yup\n    .string()\n    .oneOf([yup.ref(\"newPassword\"), null], \"Passwords must match\")\n    .required(\"Confirm password is required\"),\n});\n\nconst UserDashboard = () => {\n  const { user } = useContext(AuthContext);\n  const [userCars, setUserCars] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [successMessage, setSuccessMessage] = useState(\"\");\n  const [activeTab, setActiveTab] = useState(\"profile\");\n  const navigate = useNavigate();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    reset\n  } = useForm({\n    resolver: yupResolver(passwordSchema),\n  });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const carsRes = await API.get(\"/user/my-cars\");\n        setUserCars(carsRes.data);\n      } catch (err) {\n        console.error(\"Failed to load data:\", err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n\n  const handleProfileUpdate = async (data) => {\n    try {\n      await API.put(\"/user\", data);\n      setSuccessMessage(\"Profile updated successfully\");\n      reset({\n        currentPassword: \"\",\n        newPassword: \"\",\n        confirmPassword: \"\"\n      });\n    } catch (err) {\n      console.error(\"Update error:\", err);\n      alert(\"Update failed: \" + (err.response?.data?.message || err.message));\n    }\n  };\n\n  const handleDeleteCar = async (carId) => {\n    if (window.confirm(\"Are you sure you want to delete this car listing?\")) {\n      try {\n        await API.delete(`/cars/${carId}`);\n        setUserCars(userCars.filter(car => car._id !== carId));\n        setSuccessMessage(\"Car listing deleted successfully\");\n      } catch (err) {\n        alert(\"Failed to delete car: \" + (err.response?.data?.message || err.message));\n      }\n    }\n  };\n\n  const handleApproveCar = async (carId) => {\n    try {\n      await API.patch(`/cars/${carId}/approve`);\n      setUserCars(userCars.map(car => \n        car._id === carId ? {...car, isApproved: true} : car\n      ));\n      setSuccessMessage(\"Car approved successfully\");\n    } catch (err) {\n      alert(\"Approval failed: \" + (err.response?.data?.message || err.message));\n    }\n  };\n\n  if (loading) return <div className=\"dashboard-loading\">Loading...</div>;\n\n  return (\n    <div className=\"dashboard-container\">\n      {/* ... rest of your JSX ... */}\n    </div>\n  );\n};\n\nexport default UserDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}