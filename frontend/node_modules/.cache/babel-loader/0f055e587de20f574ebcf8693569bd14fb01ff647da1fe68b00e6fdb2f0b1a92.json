{"ast":null,"code":"var _jsxFileName = \"/home/shafiur/Auto-Trust/frontend/src/components/Cars/CarUploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport \"../../styles/CarForm.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarUploadForm = () => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [car, setCar] = useState({\n    title: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    price: \"\",\n    paymentType: \"cash\",\n    description: \"\"\n  });\n  const [image, setImage] = useState(null);\n  const [error, setError] = useState(\"\");\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!user) {\n      navigate(\"/login\");\n      return;\n    }\n    try {\n      const formData = new FormData();\n      for (const key in car) {\n        formData.append(key, car[key]);\n      }\n      if (image) {\n        formData.append(\"image\", image);\n      } else {\n        throw new Error(\"Image is required\");\n      }\n      await API.post(\"/cars\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      navigate(\"/user-dashboard\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || \"Failed to upload car\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"car-form-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create New Car Listing\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"car-form\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-btn\",\n        children: \"Create Listing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(CarUploadForm, \"4sSLD0V3a9h7ARrSBnGJFx2uvI4=\", false, function () {\n  return [useNavigate];\n});\n_c = CarUploadForm;\nexport default CarUploadForm;\nvar _c;\n$RefreshReg$(_c, \"CarUploadForm\");","map":{"version":3,"names":["React","useState","useContext","useNavigate","API","AuthContext","jsxDEV","_jsxDEV","CarUploadForm","_s","user","navigate","car","setCar","title","brand","model","year","price","paymentType","description","image","setImage","error","setError","handleSubmit","e","preventDefault","formData","FormData","key","append","Error","post","headers","err","_err$response","_err$response$data","response","data","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","_c","$RefreshReg$"],"sources":["/home/shafiur/Auto-Trust/frontend/src/components/Cars/CarUploadForm.js"],"sourcesContent":["import React, { useState, useContext } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport { AuthContext } from \"../../context/AuthContext\";\nimport \"../../styles/CarForm.css\";\n\nconst CarUploadForm = () => {\n  const { user } = useContext(AuthContext);\n  const navigate = useNavigate();\n  const [car, setCar] = useState({\n    title: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    price: \"\",\n    paymentType: \"cash\",\n    description: \"\"\n  });\n  const [image, setImage] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!user) {\n      navigate(\"/login\");\n      return;\n    }\n\n    try {\n      const formData = new FormData();\n      for (const key in car) {\n        formData.append(key, car[key]);\n      }\n      if (image) {\n        formData.append(\"image\", image);\n      } else {\n        throw new Error(\"Image is required\");\n      }\n\n      await API.post(\"/cars\", formData, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      navigate(\"/user-dashboard\");\n    } catch (err) {\n      setError(err.response?.data?.message || \"Failed to upload car\");\n    }\n  };\n\n  return (\n    <div className=\"car-form-container\">\n      <h2>Create New Car Listing</h2>\n      {error && <div className=\"error\">{error}</div>}\n      <form onSubmit={handleSubmit} className=\"car-form\">\n        {/* Form fields same as before */}\n        <button type=\"submit\" className=\"submit-btn\">Create Listing</button>\n      </form>\n    </div>\n  );\n};\n\nexport default CarUploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}