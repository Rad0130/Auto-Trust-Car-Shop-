{"ast":null,"code":"var _jsxFileName = \"/home/shafiur/Auto-Trust/frontend/src/components/Cars/CarUploadForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport \"../../styles/AuthPages.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CarUploadForm = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    title: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    price: \"\",\n    paymentType: \"cash\",\n    description: \"\"\n  });\n  const [currentImage, setCurrentImage] = useState(\"\");\n  const [newImage, setNewImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleImageChange = e => {\n    if (e.target.files[0]) {\n      setNewImage(e.target.files[0]);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    const data = new FormData();\n    Object.keys(formData).forEach(key => {\n      data.append(key, formData[key]);\n    });\n    if (newImage) {\n      data.append(\"image\", newImage);\n    }\n    try {\n      await API.post(\"/cars\", data, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"Car uploaded successfully!\");\n      navigate(\"/user-dashboard\");\n    } catch (err) {\n      var _err$response, _err$response$data;\n      console.error(\"Upload failed:\", err);\n      alert(\"Upload failed: \" + (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"auth-form\",\n      onSubmit: handleSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(CarUploadForm, \"an8JiHnGjcRkmdp5lLFpvcs3IeY=\", false, function () {\n  return [useNavigate];\n});\n_c = CarUploadForm;\nexport default CarUploadForm;\nvar _c;\n$RefreshReg$(_c, \"CarUploadForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","API","jsxDEV","_jsxDEV","CarUploadForm","_s","formData","setFormData","title","brand","model","year","price","paymentType","description","currentImage","setCurrentImage","newImage","setNewImage","loading","setLoading","navigate","handleChange","e","target","name","value","handleImageChange","files","handleSubmit","preventDefault","data","FormData","Object","keys","forEach","key","append","post","headers","alert","err","_err$response","_err$response$data","console","error","response","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/shafiur/Auto-Trust/frontend/src/components/Cars/CarUploadForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport API from \"../../utils/api\";\nimport \"../../styles/AuthPages.css\";\n\nconst CarUploadForm = () => {\n  const [formData, setFormData] = useState({\n    title: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    price: \"\",\n    paymentType: \"cash\",\n    description: \"\"\n  });\n  const [currentImage, setCurrentImage] = useState(\"\");\n  const [newImage, setNewImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleImageChange = (e) => {\n    if (e.target.files[0]) {\n      setNewImage(e.target.files[0]);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    const data = new FormData();\n    Object.keys(formData).forEach(key => {\n      data.append(key, formData[key]);\n    });\n    if (newImage) {\n      data.append(\"image\", newImage);\n    }\n\n    try {\n      await API.post(\"/cars\", data, {\n        headers: {\n          \"Content-Type\": \"multipart/form-data\"\n        }\n      });\n      alert(\"Car uploaded successfully!\");\n      navigate(\"/user-dashboard\");\n    } catch (err) {\n      console.error(\"Upload failed:\", err);\n      alert(\"Upload failed: \" + (err.response?.data?.message || err.message));\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <form className=\"auth-form\" onSubmit={handleSubmit}>\n        {/* ... rest of your form JSX ... */}\n      </form>\n    </div>\n  );\n};\n\nexport default CarUploadForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}